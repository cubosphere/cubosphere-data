--#VERSION 0.3
--Created with the internal LEVEL-Editor of Version 0.3

LEVEL_VERSION=0.3;
--Includes
if GLOBAL_GetVar("EditorMode")==1 then
  INCLUDEABSOLUTE("/editor/include/editor.inc");
else
  INCLUDEABSOLUTE("/levels/include/std.inc");
end;


GLOBAL_SetVar("StartTime",90)
GLOBAL_SetVar("MaxTime",90)
GLOBAL_SetVar("GoggleTime",15)
GLOBAL_SetVar("LevelMusic","Escape from the Citadel")


function InitActors()
 AddBall("chess", VECTOR_New(0, 0, 0), 0, 0);
end;


--Level Data
function Level()

  BackwardCompatibility(LEVEL_VERSION,"pre");
  if GLOBAL_GetVar("ThemeOverride")=="" then
     THEME_Load("chess");
  else
     THEME_Load(GLOBAL_GetVar("ThemeOverride"));
  end;

--#LEVEL BEGIN

  LEVEL_AddBlock(0,0,0,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","exit1");
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "Next_Level", "nextlevel");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","fspikes");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","fspikes");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"front","fspikes");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"back","fspikes");

  LEVEL_AddBlock(2,0,0,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,0,0,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,0,-1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(1,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(2,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(2,0,-1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(2,0,1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(2,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(1,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,0,1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 10);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1.2);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,-2,4,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"left","hourglass");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"front","key");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"back","diamond2");

  LEVEL_AddBlock(-4,5,-3,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","key");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"down","sleepingpill");

  LEVEL_AddBlock(3,7,2,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"front","key");

  LEVEL_AddBlock(-4,2,1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","fspikes");

  LEVEL_AddBlock(-5,2,1,"normal1");

  LEVEL_AddBlock(-6,2,1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(-6,2,0,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"down","key");

  LEVEL_AddBlock(-6,2,-1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(-5,2,-1,"normal1");

  LEVEL_AddBlock(-4,2,-1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","fspikes");

  LEVEL_AddBlock(-4,2,0,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"down","sleepingpill");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"left","pokal1");

  LEVEL_AddBlock(4,-3,0,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"right","key");

  LEVEL_AddBlock(4,-3,-1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","fspikes");

  LEVEL_AddBlock(4,-3,1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","fspikes");

  LEVEL_AddBlock(5,-3,1,"normal1");

  LEVEL_AddBlock(6,-3,1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(6,-3,0,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"down","diamond");

  LEVEL_AddBlock(6,-3,-1,"normal1");
    local item=LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(5,-3,-1,"normal1");

--#LEVEL END

  LEVEL_LoadSky();
  BallType="chess";

  if GLOBAL_GetVar("EditorMode")==1 then
    CamBasis=BASIS_New()
    BASIS_Set(CamBasis,VECTOR_New(0.973633, 6.40251e-08, -0.227971), VECTOR_New(0.18869, 0.56113, 0.805865), VECTOR_New(0.127924, -0.827632, 0.546361), VECTOR_New(-138.675, -103.916, 102.657))

    SelBlockX=-160;
    SelBlockY=80;
    SelBlockZ=0;
  end

  BackwardCompatibility(LEVEL_VERSION,"post");
  InitLevel();

end;

--#FILE END
