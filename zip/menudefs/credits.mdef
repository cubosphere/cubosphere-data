menuname="credits";

INCLUDE("/include/std.inc");

--This will increase by time

top=0.35;
cent=0.2;

offs=-2*top;
allsize=0;

Lines={};
Sizes={};
LineNum=0;


local headlinesize=0.02;
local linesize=0.015;

function DescLine(hl)
  LineNum=LineNum+1;
  Lines[LineNum]=hl;
  Sizes[LineNum]=headlinesize;
  allsize=allsize+2*headlinesize;
end;

function Line(l)
  LineNum=LineNum+1;
  Lines[LineNum]=l;
  Sizes[LineNum]=linesize;
  allsize=allsize+2*linesize;
end;

function BuildCredits()
 DescLine(TRANS_Str("credits:textures"));
   Line("Daniel \"Helix\" Guell");
   Line("Martin \"Brutalis\" Refshal");
   Line("Pavlos \"Promitheas\" Avgerinos");
   Line("MyNameIsSt3ve");
   Line("Hydrael");
   Line("");
 DescLine(TRANS_Str("credits:programming"));
   Line("Christian \"Exosphere\" Diddens (original codebase)");
   Line('Valeri Ochinski "v1993" (current development)');
   Line("");
DescLine(TRANS_Str("credits:levels"));
   Line("Helix");
   Line("Brutalis");
   Line("Carma001");
   Line("uR R0TT"); 
   Line("Jesus McCloud");
   Line("Exosphere");
   Line("Promitheas");
   Line("");
 DescLine(TRANS_Str("credits:sounds"));
   Line("Helix");
   Line("Shtirlitz");
   Line("Exosphere");
   Line("");

 DescLine(TRANS_Str("credits:music"));
  

   
Line("Ancient (\"Sun and Rainfall\") by HexMonkey");
Line("Aqua (\"Aquatopia\") by DJProspect");
Line("Arabia (\".:Arabic Desert:.\") by neoloconick");
Line("Arctican (\"Arctican [Craton Mix]\") by DjPolahBaerz");
Line("Azure (\"Heretical Mysticism\") by Rekuiem");
Line("Canyon (\"Everything is Floating Upward\") by Jonathan Gjertsen (SBB)");
Line("Chess (\"Escape from the Citadel\") by dtrace");
Line("Cloudy (\"Thatianne and the Sylph\") by Timraband and Cuzone (Cuzone)");
Line("Dark (\"Orchestral Theme\") by Gravey");
Line("Data World (\"Data Empire\") by GameBalance");
Line("Deep Space (\"Corridors\") by F4LLOUT");
Line("Dream (\"Stellar\") by Mugrunty");
Line("Egypt (\".:Ziggurat:.\") by xenith800");
Line("Far East (\"Journey to the East -P-\") by HalcyonicFalconX");
Line("Frost (\"Perfect Morning\") by Jonathan Gjertsen (SBB)");
Line("Greece (\"Running through Greece\") by SkyStormKuja");
Line("Green (\"Space_Forest\") by Kassich");
Line("Hell (\"==(Mindmangler)==\") by Jonathan Gjertsen (SBB)");
Line("Hyperspace Boss (\"Rose At Twilight\") by NemesisTheory");
Line("Hyperspace (\"Hyperspace\") by ShadowWingz");
Line("Inca (\"Jungle Bed\") by Soundshifter");
Line("Insolitus (\"Endless Day of Grass Field\") by Jonathan Gjertsen (SBB)");
Line("Mars (\"Melodies de Mars\") by Cutting-Christ");
Line("Mecha (\"At the Speed of Light\") by Dimrain47");
Line("Midnight (\"-SW- Cavern of Memory\") by SkyeWintrest (SWINT)");
Line("Night (\"Cave Ambient 2\") by Timraband and Cuzone (Cuzone)");
Line("Persia (\"Persian Invasion: Full Song\") by iori22");
Line("Pure (\"Never Stop\" / \"Solace of the Armageddon\") by soulblud");
Line("Retro Warpzone (\"Core of the Storm\") by UnderPolaris");
Line("Sahara (\"Deep Man\") by Jonathan Gjertsen (SBB)");
Line("Space (\"Triumphant Returns\") by Derek Huelsman (SasquaMox)");
Line("Stormy (\"Ruin\") by Lucas Paakh (Kajenx)");
Line("Sunset (\"Rose At Meridiem\") by NemesisTheory");
Line("Valley (\"The Sun Will Come\") by Timraband and Cuzone (Cuzone)");

   Line("");
   Line("[http://www.newgrounds.com/audio]");
   
   Line("");

DescLine(TRANS_Str("credits:skyboxes"));
   Line("Egypt, Arctican, Hell, Inca, Greece and Outer Space by Promitheas");
   Line("");

   Line("Storm (\"Stormy Days\"), Sunset (\"Violent Days\"), Cloudy (\"Miramar\")");
   Line("and Dark (\"Grimm Night\") by Hipshot@www.zfight.com");
   Line("");

   Line("Chess (\"Islands\"), Sahara (\"Sahara\"), Night/Midnight (\"Night Sky\"),");
   Line("Far East (\"Mystic\"), Persia (\"Redsky\"), Canyon (\"Hourglass\")");
   Line("and Ancient (\"Lost Valley\") by Hazel.H (Hazel Skyboxpack 2 and 3)");   
   Line("");

   Line("Valley (\"Distance Sunset\") by Cuinn (Cuinnton) Herrick");
   Line("");
   
   Line("Insolitus (\"Crimson Dawn\") by Cubed 3 (cubed.shadowpuppet.net)");
   Line("(edited by Brutalis)");
   Line("");
  
   Line("Hyperspace/Hyper Boss, Mars, Pure by Helix");
   Line("");	
	
   Line("Arabia (\"Arabian Nights\") by Nedim Husic");
   Line("");
 
   Line("Frost (\"Snow\") by shadow");
   Line("");


 
 
DescLine(TRANS_Str("credits:translations"));
   Line("Helix [German]");
   Line("Brutalis [Danish]");
   Line("Carma001 [French]");
   
   --Line("some other translations currently in progress...");
   --Line("Brutalis [Danish]");
   --Line("Dark Angel [Spanish]");
   --Line("Patryk \"p98\" [Polish]");
   --Line("Valerio Perticone [Italian]");
   Line("");
   Line("");

DescLine(TRANS_Str("credits:font")); 
   Line("Sui Generis by Ray Larabie");
   Line("[http://www.fontasy.de]");
   Line("");  
Line("DejaVu Fonts");
   Line("[http://dejavu-fonts.org]");
   Line("");  
 
 DescLine(TRANS_Str("credits:thanks"));
   Line("Carma001");
   Line("Simon [www.pixelprospector.com/indev/]");
   Line("Vincent Petry");
   --Line("");
   Line("Dmitry Marakasov");
   Line("Game Design Sweden AB");
   Line("Patryk \"p98\"");
   Line("Valerio Perticone");
   Line("Vincent Petry");
   Line("Jean-loup Gailly, Mark Adler, Lucian Wischik");
   Line "cddepppp256"
   Line("");  
   
DescLine(TRANS_Str("credits:libs"));
   Line("OpenGL");
   Line("SDL2 & SDL_mixer2 & SDL_ttf2");
   Line("Lua");
   Line("GLEW");
   Line("libjpeg");
   Line "libpng"
   Line "POCO libs"
   Line("");  

DescLine(TRANS_Str("credits:programs"));
   Line "KDevelop"
   Line "LLVM stack: clang and lldb"
   Line("GIMP");
   Line("Wings 3d");
   Line("Audacity");
   Line("Misfit 3d Modeler");
   Line("gedit");  
   Line("Ubuntu Linux");
   Line("Code::Blocks");
   Line("");

DescLine(TRANS_Str("credits:addthanks"));
   Line(TRANS_Str("credits:addthanksstring"));
   Line("");
end;


function Precache()
 FONT_Load(TRANS_Str("font"));
 BuildCredits();
end;



function SizeMulti(of)
  --return 0.5;

  local f=(of+top)/top;
  f=1-f^2;
  if f<0 then
    return 0;
  else
   return math.sqrt(math.sqrt(f));
  end;
  
end;

function DrawLines()
 local toffs=offs;
 FONT_SetAlign("center","top");
--print("Start"); 
 for i=1,LineNum,1 do
  local s=SizeMulti(toffs)*Sizes[i];
  --print(s);
  if s>0 then

  FONT_Goto(0,toffs+cent);
  if Sizes[i]==headlinesize then
   MATERIAL_SetColor(COLOR_New(1,1,0,1));
  else
   MATERIAL_SetColor(COLOR_New(0.5,0.5,0.5,1));
  end;
  
  FONT_SetSize(s);
  FONT_TextOut(Lines[i]);

  end;

  toffs=toffs-2*Sizes[i];

 end;
end; 


function Render()
 offs=offs+GLOBAL_GetElapsed()*0.05;
 if offs>allsize then
   offs=-2*top;
 end;
 StartMenu();
 Headline(TRANS_Str("credits:title"));
 DrawLines(); 
 EndMenu();
end;

function HandleSelection(sel)
 MENU_Load("main");
end;


