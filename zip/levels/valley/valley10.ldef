--#VERSION 0.05
--Created with the internal LEVEL-Editor of Version 0.05

LEVEL_VERSION=0.3;
--Includes
if GLOBAL_GetVar("EditorMode")==1 then
  INCLUDE("/../editor/include/editor.inc");
else
  INCLUDE("/include/std.inc");
end;


GLOBAL_SetVar("StartTime",80)
GLOBAL_SetVar("MaxTime",80)
GLOBAL_SetVar("GoggleTime",15)
GLOBAL_SetVar("LevelMusic","The Sun Will Come")





--Level Data
function Level()

  BackwardCompatibility(LEVEL_VERSION,"pre");
  if GLOBAL_GetVar("ThemeOverride")=="" then
     THEME_Load("valley");
  else
     THEME_Load(GLOBAL_GetVar("ThemeOverride"));
  end;

--#LEVEL BEGIN

  LEVEL_AddBlock(0,0,0,"normal1");

  LEVEL_AddBlock(0,0,-1,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "Color", 3);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestRotation", 0);

  LEVEL_AddBlock(0,0,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","switch");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 0);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","onedir");
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "Rotation", 2);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");

  LEVEL_AddBlock(0,0,-3,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","tramp");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","pokal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");

  LEVEL_AddBlock(0,0,-4,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","switch");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 3);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");

  LEVEL_AddBlock(0,0,-5,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","tramp");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");

  LEVEL_AddBlock(0,0,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","switch");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 1);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");

  LEVEL_AddBlock(0,0,-7,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","switch");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 3);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","icy1");

  LEVEL_AddBlock(2,1,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 3);

  LEVEL_AddBlock(2,2,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 1);

  LEVEL_AddBlock(-2,1,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 3);

  LEVEL_AddBlock(-2,2,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 1);

  LEVEL_AddBlock(0,0,-8,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","switch");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 1);
    LEVEL_AddItem(LEVEL_LastBlock(),"down","coin1");

  LEVEL_AddBlock(-1,0,-8,"normal1");

  LEVEL_AddBlock(-1,0,-9,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","coin1");

  LEVEL_AddBlock(1,0,-8,"normal1");

  LEVEL_AddBlock(1,0,-9,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","coin1");

  LEVEL_AddBlock(1,0,-10,"normal1");

  LEVEL_AddBlock(0,0,-10,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","hourglass");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "Color", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestRotation", 3);
    LEVEL_ChangeSide(LEVEL_LastBlock(),"back","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+5, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+5, "Color", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+5, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+5, "DestRotation", 2);

  LEVEL_AddBlock(-1,0,-10,"normal1");

  LEVEL_AddBlock(-2,3,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 3);

  LEVEL_AddBlock(2,3,-2,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 3);

  LEVEL_AddBlock(2,1,-3,"icy1");

  LEVEL_AddBlock(2,1,-4,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 0);

  LEVEL_AddBlock(-2,1,-4,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 0);

  LEVEL_AddBlock(-2,2,-4,"breaking1");

  LEVEL_AddBlock(-2,1,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 1);

  LEVEL_AddBlock(-2,2,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+2, "Color", 3);

  LEVEL_AddBlock(2,1,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 1);

  LEVEL_AddBlock(2,2,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","laser");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 3);

  LEVEL_AddBlock(2,5,-6,"icy1");

  LEVEL_AddBlock(-2,5,-6,"icy1");

  LEVEL_AddBlock(-1,5,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","fspikes");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"front","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","coin1");

  LEVEL_AddBlock(1,5,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","fspikes");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"front","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","coin1");

  LEVEL_AddBlock(0,5,-6,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","key");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","diamond2");
    LEVEL_AddItem(LEVEL_LastBlock(),"front","key");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","diamond");

  LEVEL_AddBlock(0,3,-9,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "Color", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+1, "DestRotation", 3);

  LEVEL_AddBlock(-1,3,-9,"normal1");

  LEVEL_AddBlock(-2,3,-9,"icy1");

  LEVEL_AddBlock(-4,0,-10,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "StartActive", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "Color", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+3, "DestRotation", 2);

  LEVEL_AddBlock(-4,1,-10,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","exit1");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Next_Level", "nextlevel");

  LEVEL_AddBlock(0,1,3,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","key");

  LEVEL_AddBlock(-1,1,3,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","teleport");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "StartActive", 0);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Color", 3);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "DestSide", 1);
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "DestRotation", 0);

  LEVEL_AddBlock(-2,1,3,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","diamond2");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"front","onedir");
      SIDE_SetVar(LEVEL_LastBlock()*6+4, "Rotation", 2);

  LEVEL_AddBlock(-3,2,-4,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","fspikes");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"back","fspikes");

--#LEVEL END

  startblockpos=VECTOR_New(0, 0, 0);
  startside=0;
  startrotation=0;
  startblock=1; --Means that a start point is set

  LEVEL_LoadSky();
  BallType="valley";

  if GLOBAL_GetVar("EditorMode")==1 then
    CamBasis=BASIS_New()
    BASIS_Set(CamBasis,VECTOR_New(0.915743, 5.45386e-08, -0.40149), VECTOR_New(-0.128189, 0.947526, -0.292387), VECTOR_New(0.380427, 0.319256, 0.867733), VECTOR_New(93.5855, 162.515, 194.209))

    SelBlockX=0;
    SelBlockY=120;
    SelBlockZ=-360;
  end

  BackwardCompatibility(LEVEL_VERSION,"post");
  InitLevel();

end;

--#FILE END
