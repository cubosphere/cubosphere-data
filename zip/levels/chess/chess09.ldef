--#VERSION 0.04
--Created with the internal LEVEL-Editor of Version Alpha 0.04

LEVEL_VERSION=0.3;
--Includes
if GLOBAL_GetVar("EditorMode")==1 then
  INCLUDE("/../editor/include/editor.inc");
else
  INCLUDE("/include/std.inc");
end;


GLOBAL_SetVar("StartTime",90)
GLOBAL_SetVar("MaxTime",90)
GLOBAL_SetVar("GoggleTime",15)
GLOBAL_SetVar("LevelMusic","Escape from the Citadel")


--Level Data
function Level()

  BackwardCompatibility(LEVEL_VERSION,"pre");
  if GLOBAL_GetVar("ThemeOverride")=="" then
     THEME_Load("chess");
  else
     THEME_Load(GLOBAL_GetVar("ThemeOverride"));
  end;

--#LEVEL BEGIN

  LEVEL_AddBlock(-1,0,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,-1,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-2,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,-1,2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,-1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,-3,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,-4,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-2,-1,-4,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,-1,-4,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,0,-4,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-2,-4,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,0,5,"normal1");

  LEVEL_AddBlock(0,-1,-6,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","exit1");
      SIDE_SetVar(LEVEL_LastBlock()*6+0, "Next_Level", "nextlevel");

  LEVEL_AddBlock(1,2,-2,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"right","key");

  LEVEL_AddBlock(-4,-4,-4,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","diamond");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","key");

  LEVEL_AddBlock(-1,-1,1,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,-1,0,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(-1,5,0,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","hourglass");

  LEVEL_AddBlock(-6,1,-1,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","key");
    LEVEL_AddItem(LEVEL_LastBlock(),"left","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"right","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"front","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","coin1");

  LEVEL_AddBlock(-1,-4,-1,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"right","diamond");

  LEVEL_AddBlock(0,6,4,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"down","pokal1");

  LEVEL_AddBlock(-4,3,2,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","key");
    LEVEL_AddItem(LEVEL_LastBlock(),"left","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"right","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"front","coin1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","coin1");

  LEVEL_AddBlock(-2,0,5,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(0,0,5,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(0,0,6,"normal1");

  LEVEL_AddBlock(-2,0,6,"normal1");

  LEVEL_AddBlock(-2,0,7,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(0,0,7,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(-1,0,7,"breaking1");

  LEVEL_AddBlock(1,-1,-6,"normal1");

  LEVEL_AddBlock(2,-1,-6,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(2,-1,-7,"normal1");

  LEVEL_AddBlock(2,-1,-8,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(1,-1,-8,"normal1");

  LEVEL_AddBlock(0,-1,-8,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"up","coin1");

  LEVEL_AddBlock(0,-1,-7,"normal1");

--#LEVEL END

  startblockpos=VECTOR_New(-40, 0, 200);
  startside=0;
  startrotation=0;
  startblock=1; --Means that a start point is set

  LEVEL_LoadSky();
  BallType="chess";

  if GLOBAL_GetVar("EditorMode")==1 then
    CamBasis=BASIS_New()
    BASIS_Set(CamBasis,VECTOR_New(0.800988, 2.46843e-08, 0.598632), VECTOR_New(0.388652, 0.760556, -0.520029), VECTOR_New(-0.455299, 0.649222, 0.609196), VECTOR_New(-228.036, 304.475, 67.1628))

    SelBlockX=0;
    SelBlockY=-40;
    SelBlockZ=-240;
  end

  BackwardCompatibility(LEVEL_VERSION,"post");
  InitLevel();

end;

--#FILE END
