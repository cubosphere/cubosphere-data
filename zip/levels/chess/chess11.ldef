--#VERSION 0.04
--Created with the internal LEVEL-Editor of Version Alpha 0.04

LEVEL_VERSION=0.3;
--Includes
if GLOBAL_GetVar("EditorMode")==1 then
  INCLUDE("/../editor/include/editor.inc");
else
  INCLUDE("/include/std.inc");
end;


GLOBAL_SetVar("StartTime",90)
GLOBAL_SetVar("MaxTime",90)
GLOBAL_SetVar("GoggleTime",15)
GLOBAL_SetVar("LevelMusic","Escape from the Citadel")


--Level Data
function Level()

  BackwardCompatibility(LEVEL_VERSION,"pre");
  if GLOBAL_GetVar("ThemeOverride")=="" then
     THEME_Load("chess");
  else
     THEME_Load(GLOBAL_GetVar("ThemeOverride"));
  end;

--#LEVEL BEGIN

  LEVEL_AddBlock(0,0,0,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"front","exit1");
      SIDE_SetVar(LEVEL_LastBlock()*6+4, "Next_Level", "nextlevel");

  LEVEL_AddBlock(0,0,-2,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0.5);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,-4,"phaser");
    BLOCK_SetVar(LEVEL_LastBlock(), "ActiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DeactiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "BlendTime", 0.3);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);

  LEVEL_AddBlock(0,0,-6,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,-8,"phaser");
    BLOCK_SetVar(LEVEL_LastBlock(), "ActiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DeactiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "BlendTime", 0.3);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);

  LEVEL_AddBlock(0,0,-10,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0.5);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,-12,"phaser");
    BLOCK_SetVar(LEVEL_LastBlock(), "ActiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DeactiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "BlendTime", 0.3);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);

  LEVEL_AddBlock(0,0,-14,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,0,-16,"normal1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","diamond");

  LEVEL_AddBlock(0,3,-18,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,7,-18,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0.5);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,11,-18,"elevator");
    BLOCK_SetVar(LEVEL_LastBlock(), "Amplitude", 4);
    BLOCK_SetVar(LEVEL_LastBlock(), "Speed", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "Direction", 0);
    BLOCK_SetVar(LEVEL_LastBlock(), "DelayTime", 0.5);

  LEVEL_AddBlock(0,5,-18,"phaser");
    BLOCK_SetVar(LEVEL_LastBlock(), "ActiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DeactiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "BlendTime", 0.3);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);

  LEVEL_AddBlock(0,9,-18,"phaser");
    BLOCK_SetVar(LEVEL_LastBlock(), "ActiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "DeactiveTime", 1);
    BLOCK_SetVar(LEVEL_LastBlock(), "BlendTime", 0.3);
    BLOCK_SetVar(LEVEL_LastBlock(), "Phase", 0);

  LEVEL_AddBlock(0,13,-18,"normal1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"up","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"down","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"left","icy1");
    LEVEL_AddItem(LEVEL_LastBlock(),"left","key");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"right","icy1");
    LEVEL_ChangeSide(LEVEL_LastBlock(),"front","icy1");
    LEVEL_AddItem(LEVEL_LastBlock(),"back","pokal1");

--#LEVEL END

  startblockpos=VECTOR_New(0, 0, 0);
  startside=0;
  startrotation=0;
  startblock=1; --Means that a start point is set

  LEVEL_LoadSky();
  BallType="chess";

  if GLOBAL_GetVar("EditorMode")==1 then
    CamBasis=BASIS_New()
    BASIS_Set(CamBasis,VECTOR_New(-0.625678, 1.57901e-08, 0.780049), VECTOR_New(0.48695, 0.781174, 0.390581), VECTOR_New(-0.609351, 0.624241, -0.488757), VECTOR_New(-311.773, 501.465, -680.912))

    SelBlockX=0;
    SelBlockY=520;
    SelBlockZ=-720;
  end

  BackwardCompatibility(LEVEL_VERSION,"post");
  InitLevel();

end;

--#FILE END
